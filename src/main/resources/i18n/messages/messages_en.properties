projectDto.name.notBlank=Name must not be empty
projectDto.name.schema=Project name
projectDto.name.pattern=Name must not contain any characters except letters, numbers, spaces or $-_.+!*'(). First character must be letter or digit.
projectDto.name.size=Project name must not be greater than 50 characters
projectDto.schema=Project
typeMismatch.createDate=Start date must be in valid date and time format
typeMismatch.actualCosts=Actual Costs must be in valid number format
typeMismatch.dueDate=Estimated end date must be in valid date and time format
typeMismatch.estCosts=Estimated Costs must be in valid number format
typeMismatch.estFinishDate=Finish date must be in valid date and time format
typeMismatch.finishDate=Finish date must be in valid date and time format
typeMismatch.startDate=Start date must be in valid date and time format
projectDto.description.schema=Project description
projectDto.teamName.schema=Team
projectDto.teamName.size=Team name must not be greater than 50 characters
projectDto.status.schema=Статус
projectDto.startDate.schema=Project start date
projectDto.estFinishDate.schema=Project estimated finish date
releaseDto.schema=Release
releaseDto.id.schema=Release ID
releaseDto.name.schema=Release name
releaseDto.name.notBlank=Name must not be empty
releaseDto.name.size=Release name must not be greater than 50 characters
releaseDto.startDate.schema=Дата начала релиза
releaseDto.startDate.notNull=Start date must not be empty
releaseDto.finishDate.schema=Release finish date
releaseDto.finishDate.notNull=Finish date must not be empty
taskDto.schema=Task
taskDto.id.schema=ID задачи
taskDto.name.schema=Task name
taskDto.name.notBlank=Name must not be empty
taskDto.name.size=Name must not be greater than 50 characters
taskDto.status.schema=Task status
taskDto.type.schema=Task type
taskDto.description.schema=Task description
taskDto.createDate.schema=Task create date
taskDto.createDate.notNull=Start date must not be empty
taskDto.dueDate.schema=Estimated end date
taskDto.dueDate.notNull=Estimated end date must not be empty
taskDto.finishDate.schema=Finish date
taskDto.estCosts.schema=Estimated costs
taskDto.actualCosts.schema=Actual costs
taskDto.comments.schema=Comments
taskDto.priority.schema=Priority
taskDto.assigneeName.schema=Assignee name
taskDto.assigneeName.size=Assignee name must not be greater than 150 characters
teamDto.schema=Team
teamDto.name.schema=Team name
teamDto.name.notBlank=Name must not be empty
teamDto.name.pattern=Name must not contain any characters except letters, numbers, spaces or $-_.+!*'(). First character must be letter or digit.
teamDto.name.size=Team name must not be greater than 50 characters
teamDto.description.schema=Team description
userDto.schema=User
userDto.email.schema=E-mail
userDto.email.email=E-mail must be in valid format
userDto.email.notBlank=E-mail must not be empty
userDto.password.schema=Password
userDto.password.notBlank=Password must not be empty
userDto.password.size=Password must be at least 8 and not greater than 50 characters
userDto.firstName.schema=First name
userDto.firstName.notBlank=First name must not be empty
userDto.firstName.size=First name must not be greater than 50 characters
userDto.lastName.schema=Last name
userDto.lastName.notBlank=Last name must not be empty
userDto.lastName.size=Last name must not be greater than 50 characters
userDto.role.schema=Role
userDto.role.notBlank=Role name must not be empty
userDto.role.size=Role name must not be greater than 50 characters
userDto.userNumber.schema=User number
errorCodesController.handleError.logger={0} has been thrown!
filterController.tag=Filters
filterController.getFilterPage.operation=Get filters page
filterController.applyFilter.operation=Apply filter
loginController.tag=Login
loginController.login.operation=Get login page
projectsController.tag=Projects
projectsController.getProjectsPage.operation=Get projects page
projectsController.getNewProjectPage.operation=Get new project page
projectsController.createProject.operation=Create new project
projectsController.getEditProjectPage.operation=Get project editing page
projectsController.editProject.operation=Edit project
registrationController.tag=Registration
registrationController.getRegistrationPage.operation=Get registration page
registrationController.registerUser.operation=Register user
registrationController.registerUser.logger=Created the user with credentials: {0}
releasesController.tag=Releases
releasesController.getReleasePage.operation=Get releases page
releasesController.getNewReleasePage.operation=Get release creating page
releasesController.createRelease.operation=Create release
releasesController.getEditReleasePage.operation=Get release editing page
releasesController.editRelease.operation=Edit release information
taskBoardController.tag=Task board
taskBoardController.getBoardPage.operation=Get task board page
taskBoardController.getTaskPage.operation=Get task page
taskBoardController.getNewTaskPage.operation=Get new task page
taskBoardController.saveNewTask.operation=Save new task
taskBoardController.editTask.operation=Edit task
taskBoardController.deleteTask.operation=Delete task
teamsController.tag=Teams
teamsController.getTeamsPage.operation=Get teams page
teamsController.getNewTeamPage.operation=Get new team page
teamsController.createTeam.operation=Create team
teamsController.getEditTeamPage.operation=Get edit team page
teamsController.editTeam.operation=Edit team information
userProfileController.tag=User profile
userProfileController.getProfile.operation=Get profile page
userProfileController.updateProfile.operation=Update users profile
userProfileController.getProfile.logger={0} has accessed the profile page
projectService.addProject.logger={0} project has been created
projectService.editProject.logger=Project {0} has been edited
projectAlreadyExist.message=Project with name "{0}" already exist
projectService.addProject.illegalArgument=Can't create empty project
projectService.notFound=Project with name "{0}" not found
releaseService.getById.notFound=Release not found
releaseService.notFoundById=Release with ID "{0}" not found
releaseDatesIntersection.message=Release "{0}" dates intersects with another existing release
releaseService.addRelease.logger=Release "{0}" for project "{1}" has been added
releaseService.editRelease.logger=Release "{0}" for project "{1}" has been edited
releaseService.getCurrentRelease.notFound=Release for project with name "{0}" not found
releaseDatesOutside.message=Release "{0}" dates are outside project dates
taskRelease.notFound=Task {0} has no due date.
taskRelease.illegalArgument=Can't delete empty task
taskService.notFound=Task with ID "{0}" not found
taskService.addTask.logger={0} task has been created
taskService.notFoundEmpty=Task not found
taskService.editTask.logger=Task {0} has been edited
taskService.add.illegalArgument=Can't add empty task
taskService.delete.illegalArgument=Can't delete empty task
taskService.delete.logger=Task {0} has been deleted
taskDates.outside.message=Task "{0}" dates are outside release dates
teamService.notFound=Team with name "{0}" not found
teamService.alreadyExist.message=Team with name "{0}" already exist
userDetails.notFound=User not found
userService.IllegalArgument.message=Can't create empty user
userService.alreadyExist.message=User with E-mail "{0}" already exist
userService.editUser.logger=User "{0}" has been edited
userService.notFoundLogin.message=User with login  "{0}" not found
userService.notFoundUserNumber.message=User with number "{0}" not found
userTask.illegalArgument.message=Can't delete empty task
projectWithDates.message=Start date is after finish date
releaseWithDates.message=Start date is after finish date
taskWithDates.message=Start date is after finish date


